(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    151542,       2832]
NotebookOptionsPosition[    150130,       2795]
NotebookOutlinePosition[    150496,       2811]
CellTagsIndexPosition[    150453,       2808]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "8"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "14"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "25"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"5", ",", "40"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"6", ",", "57"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"7", ",", "63"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "87"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"9", ",", "105"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "118"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"11", ",", "153"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"12", ",", "173"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"13", ",", "183"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"14", ",", "188"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"15", ",", "212"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"16", ",", "227"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"17", ",", "265"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"18", ",", "317"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"19", ",", "343"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"20", ",", "361"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"21", ",", "457"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"22", ",", "476"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"23", ",", "523"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"24", ",", "538"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"25", ",", "595"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"26", ",", "685"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"27", ",", "780"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"28", ",", "896"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"29", ",", "1000"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"30", ",", "1100"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"31", ",", "1200"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"32", ",", "1400"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"33", ",", "1700"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"34", ",", "2000"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"35", ",", "2400"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"36", ",", "2800"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"37", ",", "3300"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"38", ",", "4300"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"39", ",", "5300"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"40", ",", "6800"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"41", ",", "8500"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"42", ",", "10300"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"43", ",", "12700"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"44", ",", "14900"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"45", ",", "17500"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"46", ",", "21200"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"47", ",", "25200"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"48", ",", "29100"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"49", ",", "32800"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"50", ",", "37800"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"51", ",", "44900"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"52", ",", "47400"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"53", ",", "63600"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"54", ",", "75100"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"55", ",", "81700"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"56", ",", "100500"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"57", ",", "116100"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"58", ",", "133800"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"59", ",", "161600"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"60", ",", "190900"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"61", ",", "223200"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"62", ",", "254600"}], "}"}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.793735397073798*^9, 3.7937356292469587`*^9}, {
  3.793735906159113*^9, 3.793736032989208*^9}, {3.79373618590942*^9, 
  3.7937365765509787`*^9}, {3.793739206178152*^9, 3.793739206324389*^9}, {
  3.793751457614159*^9, 3.793751472650463*^9}, {3.79380472643836*^9, 
  3.793804766138219*^9}, {3.7938265312335043`*^9, 3.793826533853621*^9}, {
  3.793922896368059*^9, 
  3.793922904039431*^9}},ExpressionUUID->"7527be31-d223-4df1-b004-\
c881e44a1832"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"fit", "=", 
   RowBox[{"NonlinearModelFit", "[", 
    RowBox[{"data", ",", 
     RowBox[{"a", " ", 
      RowBox[{"Exp", "[", 
       RowBox[{
        RowBox[{"-", "b"}], " ", "t"}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", "t"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fit2", "=", 
   RowBox[{"NonlinearModelFit", "[", 
    RowBox[{"data", ",", 
     RowBox[{"c", "/", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{"a", "*", 
         RowBox[{"Exp", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "b"}], " ", "t"}], "+", "d"}], "]"}]}]}], ")"}]}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"a", ",", "b", ",", "c", ",", "d"}], "}"}], ",", "t"}], "]"}]}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{"Normal", "[", "fit", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Normal", "[", "fit2", "]"}], "\[IndentingNewLine]", 
 RowBox[{"sol", "=", 
  RowBox[{"DSolve", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"c", "'"}], "[", "t", "]"}], "\[Equal]", 
       RowBox[{
        RowBox[{"1", "/", "5.45"}], "*", 
        RowBox[{"c", "[", "t", "]"}], "*", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"c", "[", "t", "]"}], "/", "k"}], ")"}]}], ")"}]}]}], ",", 
      RowBox[{
       RowBox[{"c", "[", "0", "]"}], "\[Equal]", "4"}]}], "}"}], ",", 
    RowBox[{"c", "[", "t", "]"}], ",", "t"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"fit3", "=", 
  RowBox[{"NonlinearModelFit", "[", 
   RowBox[{"data", ",", 
    RowBox[{
     RowBox[{"c", "[", "t", "]"}], "/.", "sol"}], ",", "k", ",", "t"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Normal", "[", "fit", "]"}], ",", 
     RowBox[{"Normal", "[", "fit2", "]"}], ",", 
     RowBox[{"Normal", "[", "fit3", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "50", ",", "80"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Exponential Fit\>\"", ",", "\"\<Naive Logistic Fit\>\"", ",", 
      "\"\<Ad hoc Fancy Logistic\>\""}], "}"}]}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"scatterPlot", "=", 
  RowBox[{"ListPlot", "[", 
   RowBox[{"data", ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "64"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "400000"}], "}"}]}], "}"}]}], ",", 
    RowBox[{"Frame", "\[Rule]", "True"}], ",", 
    RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"{", "\"\<# of Cases\>\"", "}"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fitPlots", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Normal", "[", "fit", "]"}], ",", 
       RowBox[{"Normal", "[", "fit2", "]"}], ",", 
       RowBox[{"Normal", "[", "fit3", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "1000"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Exponential Fit\>\"", ",", "\"\<Naive Logistic Fit\>\"", ",", 
        "\"\<Ad hoc Fancy Logistic\>\""}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{"scatterPlot", ",", "fitPlots"}], "]"}]}], "Input",
 CellChangeTimes->{{3.7937434343086987`*^9, 3.793743493146038*^9}, {
   3.793743601125703*^9, 3.793743605598768*^9}, 3.7937436919026413`*^9, 
   3.7937437283702307`*^9, {3.7937437727184267`*^9, 3.793743798532311*^9}, 
   3.793743875276702*^9, {3.793743952436956*^9, 3.793744006277926*^9}, {
   3.7937440645184593`*^9, 3.793744132761331*^9}, {3.793749583203743*^9, 
   3.793749639155398*^9}, {3.793749696503333*^9, 3.793749799216745*^9}, {
   3.793749877508678*^9, 3.793749884125815*^9}, {3.7937499181501303`*^9, 
   3.793749971903945*^9}, {3.793750076791135*^9, 3.793750083916098*^9}, {
   3.793750163121256*^9, 3.793750163235223*^9}, {3.793750200855709*^9, 
   3.793750241358424*^9}, {3.793750273063332*^9, 3.793750273373402*^9}, {
   3.793750318047616*^9, 3.793750349718789*^9}, {3.793750380933559*^9, 
   3.7937504110181*^9}, {3.7937504560186243`*^9, 3.79375046606114*^9}, {
   3.793750576519252*^9, 3.7937506602651587`*^9}, {3.793750703713636*^9, 
   3.793750768458002*^9}, {3.793750836343733*^9, 3.793750850174059*^9}, {
   3.793751501031096*^9, 3.79375150112892*^9}, {3.79375154632612*^9, 
   3.7937515560012817`*^9}, {3.793804783715061*^9, 3.793804791288951*^9}, {
   3.793819901388137*^9, 3.79381992798885*^9}, {3.7938254123008757`*^9, 
   3.793825462248464*^9}, {3.79382557371465*^9, 3.793825727594563*^9}, {
   3.793825825445436*^9, 3.793825923895731*^9}, {3.793825967065424*^9, 
   3.793825980299954*^9}, {3.793826038137858*^9, 3.793826087780238*^9}, {
   3.793826162268201*^9, 3.793826196193252*^9}, {3.793826369699885*^9, 
   3.7938264418911257`*^9}, 3.7938264779737053`*^9, {3.793826590606031*^9, 
   3.7938266398087606`*^9}, {3.793826682970827*^9, 3.793826689786772*^9}, {
   3.793826723591095*^9, 3.793826804568963*^9}, {3.793922960912035*^9, 
   3.793922961602407*^9}, {3.793923023169724*^9, 
   3.793923046192091*^9}},ExpressionUUID->"7378be21-9405-4e98-a317-\
0337fe4a4ec5"],

Cell[BoxData[
 TemplateBox[{
  "NonlinearModelFit","sszero",
   "\"The step size in the search has become less than the tolerance \
prescribed by the PrecisionGoal option, but the gradient is larger than the \
tolerance specified by the AccuracyGoal option. There is a possibility that \
the method has stalled at a point that is not a local minimum.\"",2,43,9,
   29707932530736108103,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.7937439906424227`*^9, 3.793744007454342*^9}, {
   3.793744068156741*^9, 3.793744133463767*^9}, {3.793749602370298*^9, 
   3.7937496400759*^9}, {3.793749682597863*^9, 3.793749800254799*^9}, {
   3.793749880839078*^9, 3.7937498848723373`*^9}, {3.793749919686887*^9, 
   3.793749946455069*^9}, 3.793750055437561*^9, 3.7937500927253513`*^9, 
   3.79375016422746*^9, {3.7937502020570383`*^9, 3.793750274589113*^9}, {
   3.793750319240272*^9, 3.7937503502575827`*^9}, {3.793750381804103*^9, 
   3.7937503885673428`*^9}, 3.793750418704095*^9, 3.793750467161471*^9, {
   3.793750585231346*^9, 3.793750662563656*^9}, {3.793750704810816*^9, 
   3.793750737372952*^9}, 3.793750769308338*^9, {3.7937508381945343`*^9, 
   3.793750850718993*^9}, {3.793751487303952*^9, 3.793751506843787*^9}, {
   3.7937515469982758`*^9, 3.793751556494307*^9}, {3.793804746673531*^9, 
   3.7938047918798428`*^9}, {3.793819908229547*^9, 3.793819928768371*^9}, 
   3.793825343213983*^9, {3.7938254185949087`*^9, 3.7938254629858007`*^9}, 
   3.7938256352646933`*^9, {3.793825667370001*^9, 3.7938256949421177`*^9}, 
   3.793825728792004*^9, {3.79382590866591*^9, 3.793825924784762*^9}, 
   3.793825980953773*^9, {3.793826044749218*^9, 3.793826088897202*^9}, 
   3.793826163878008*^9, 3.793826398504161*^9, 3.793826443725772*^9, 
   3.79382647927886*^9, 3.79382654260252*^9, {3.793826592125751*^9, 
   3.793826640363125*^9}, 3.7938266908565683`*^9, {3.7938267387609673`*^9, 
   3.793826764910157*^9}, 3.793826806243709*^9, 3.7939229151166553`*^9, 
   3.7939229655280733`*^9, {3.793923025210964*^9, 
   3.793923047189254*^9}},ExpressionUUID->"fb37adda-68de-468f-b858-\
701403e94734"],

Cell[BoxData[
 RowBox[{"13.186629655154935`", " ", 
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{"0.15940542080066797`", " ", "t"}]]}]], "Output",
 CellChangeTimes->{
  3.7937434507371283`*^9, 3.793743493819765*^9, 3.793743606094599*^9, 
   3.793743694419845*^9, 3.793743730073999*^9, 3.793743799780847*^9, 
   3.793743876867021*^9, {3.7937439906441507`*^9, 3.793744007462943*^9}, {
   3.793744068165258*^9, 3.793744133472435*^9}, {3.793749602378817*^9, 
   3.793749640084361*^9}, {3.793749682615738*^9, 3.793749800264748*^9}, {
   3.793749880850068*^9, 3.7937498848803263`*^9}, {3.793749919694532*^9, 
   3.793749946463429*^9}, 3.793750055448612*^9, 3.793750092713582*^9, 
   3.793750164212603*^9, {3.7937502020460997`*^9, 3.7937502745873404`*^9}, {
   3.7937503192384577`*^9, 3.793750350255669*^9}, {3.793750381797195*^9, 
   3.793750388565516*^9}, 3.793750418701185*^9, 3.793750467159586*^9, {
   3.793750585229415*^9, 3.793750662561574*^9}, {3.793750704808817*^9, 
   3.793750737369899*^9}, 3.7937507693046703`*^9, {3.793750838191162*^9, 
   3.7937508507169447`*^9}, {3.79375148730052*^9, 3.79375150684029*^9}, {
   3.793751546996086*^9, 3.7937515564921722`*^9}, {3.793804746657692*^9, 
   3.793804791877618*^9}, {3.793819908316677*^9, 3.793819928712248*^9}, 
   3.793825343199854*^9, {3.7938254185933733`*^9, 3.793825462984146*^9}, 
   3.793825635207787*^9, {3.793825667366119*^9, 3.793825694935357*^9}, 
   3.7938257287857027`*^9, {3.793825908661831*^9, 3.793825924779875*^9}, 
   3.793825980947835*^9, {3.79382604474268*^9, 3.793826088893381*^9}, 
   3.793826163861059*^9, 3.793826398489895*^9, 3.793826443720039*^9, 
   3.7938264792759933`*^9, 3.793826542585833*^9, {3.7938265921238823`*^9, 
   3.793826640361125*^9}, 3.793826690852261*^9, {3.7938267387694607`*^9, 
   3.7938267649187613`*^9}, 3.7938268062526207`*^9, 3.793922915198159*^9, 
   3.7939229655369873`*^9, {3.793923025219301*^9, 
   3.793923047198812*^9}},ExpressionUUID->"200d9f6e-edab-438b-b19e-\
424dbfba9360"],

Cell[BoxData[
 FractionBox["4.1684211266087512`*^6", 
  RowBox[{"1", "+", 
   RowBox[{"129.0082055181727`", " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"8.048023427549563`", "\[VeryThinSpace]", "-", 
      RowBox[{"0.16428751188739293`", " ", "t"}]}]]}]}]]], "Output",
 CellChangeTimes->{
  3.7937434507371283`*^9, 3.793743493819765*^9, 3.793743606094599*^9, 
   3.793743694419845*^9, 3.793743730073999*^9, 3.793743799780847*^9, 
   3.793743876867021*^9, {3.7937439906441507`*^9, 3.793744007462943*^9}, {
   3.793744068165258*^9, 3.793744133472435*^9}, {3.793749602378817*^9, 
   3.793749640084361*^9}, {3.793749682615738*^9, 3.793749800264748*^9}, {
   3.793749880850068*^9, 3.7937498848803263`*^9}, {3.793749919694532*^9, 
   3.793749946463429*^9}, 3.793750055448612*^9, 3.793750092713582*^9, 
   3.793750164212603*^9, {3.7937502020460997`*^9, 3.7937502745873404`*^9}, {
   3.7937503192384577`*^9, 3.793750350255669*^9}, {3.793750381797195*^9, 
   3.793750388565516*^9}, 3.793750418701185*^9, 3.793750467159586*^9, {
   3.793750585229415*^9, 3.793750662561574*^9}, {3.793750704808817*^9, 
   3.793750737369899*^9}, 3.7937507693046703`*^9, {3.793750838191162*^9, 
   3.7937508507169447`*^9}, {3.79375148730052*^9, 3.79375150684029*^9}, {
   3.793751546996086*^9, 3.7937515564921722`*^9}, {3.793804746657692*^9, 
   3.793804791877618*^9}, {3.793819908316677*^9, 3.793819928712248*^9}, 
   3.793825343199854*^9, {3.7938254185933733`*^9, 3.793825462984146*^9}, 
   3.793825635207787*^9, {3.793825667366119*^9, 3.793825694935357*^9}, 
   3.7938257287857027`*^9, {3.793825908661831*^9, 3.793825924779875*^9}, 
   3.793825980947835*^9, {3.79382604474268*^9, 3.793826088893381*^9}, 
   3.793826163861059*^9, 3.793826398489895*^9, 3.793826443720039*^9, 
   3.7938264792759933`*^9, 3.793826542585833*^9, {3.7938265921238823`*^9, 
   3.793826640361125*^9}, 3.793826690852261*^9, {3.7938267387694607`*^9, 
   3.7938267649187613`*^9}, 3.7938268062526207`*^9, 3.793922915198159*^9, 
   3.7939229655369873`*^9, {3.793923025219301*^9, 
   3.793923047200358*^9}},ExpressionUUID->"013336e9-32c2-4cba-b5c1-\
7738a6f18c73"],

Cell[BoxData[
 TemplateBox[{
  "Solve","ifun",
   "\"Inverse functions are being used by \
\\!\\(\\*RowBox[{\\\"Solve\\\"}]\\), so some solutions may not be found; use \
Reduce for complete solution information.\"",2,46,10,29707932530736108103,
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.7937439906424227`*^9, 3.793744007454342*^9}, {
   3.793744068156741*^9, 3.793744133463767*^9}, {3.793749602370298*^9, 
   3.7937496400759*^9}, {3.793749682597863*^9, 3.793749800254799*^9}, {
   3.793749880839078*^9, 3.7937498848723373`*^9}, {3.793749919686887*^9, 
   3.793749946455069*^9}, 3.793750055437561*^9, 3.7937500927253513`*^9, 
   3.79375016422746*^9, {3.7937502020570383`*^9, 3.793750274589113*^9}, {
   3.793750319240272*^9, 3.7937503502575827`*^9}, {3.793750381804103*^9, 
   3.7937503885673428`*^9}, 3.793750418704095*^9, 3.793750467161471*^9, {
   3.793750585231346*^9, 3.793750662563656*^9}, {3.793750704810816*^9, 
   3.793750737372952*^9}, 3.793750769308338*^9, {3.7937508381945343`*^9, 
   3.793750850718993*^9}, {3.793751487303952*^9, 3.793751506843787*^9}, {
   3.7937515469982758`*^9, 3.793751556494307*^9}, {3.793804746673531*^9, 
   3.7938047918798428`*^9}, {3.793819908229547*^9, 3.793819928768371*^9}, 
   3.793825343213983*^9, {3.7938254185949087`*^9, 3.7938254629858007`*^9}, 
   3.7938256352646933`*^9, {3.793825667370001*^9, 3.7938256949421177`*^9}, 
   3.793825728792004*^9, {3.79382590866591*^9, 3.793825924784762*^9}, 
   3.793825980953773*^9, {3.793826044749218*^9, 3.793826088897202*^9}, 
   3.793826163878008*^9, 3.793826398504161*^9, 3.793826443725772*^9, 
   3.79382647927886*^9, 3.79382654260252*^9, {3.793826592125751*^9, 
   3.793826640363125*^9}, 3.7938266908565683`*^9, {3.7938267387609673`*^9, 
   3.793826764910157*^9}, 3.793826806243709*^9, 3.7939229151166553`*^9, 
   3.7939229655280733`*^9, {3.793923025210964*^9, 
   3.793923047254929*^9}},ExpressionUUID->"df5a1542-766b-46b5-b109-\
d94f3ba97c95"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"c", "[", "t", "]"}], "\[Rule]", 
    FractionBox[
     RowBox[{"1.`", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"0.1834862385321101`", " ", "t"}]], " ", "k"}], 
     RowBox[{
      RowBox[{"1.`", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"0.1834862385321101`", " ", "t"}]]}], "-", 
      RowBox[{"0.25`", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"4.`", "\[VeryThinSpace]", "-", 
          RowBox[{"1.`", " ", "k"}]}], ")"}], "1.`"]}]}]]}], "}"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.7937434507371283`*^9, 3.793743493819765*^9, 3.793743606094599*^9, 
   3.793743694419845*^9, 3.793743730073999*^9, 3.793743799780847*^9, 
   3.793743876867021*^9, {3.7937439906441507`*^9, 3.793744007462943*^9}, {
   3.793744068165258*^9, 3.793744133472435*^9}, {3.793749602378817*^9, 
   3.793749640084361*^9}, {3.793749682615738*^9, 3.793749800264748*^9}, {
   3.793749880850068*^9, 3.7937498848803263`*^9}, {3.793749919694532*^9, 
   3.793749946463429*^9}, 3.793750055448612*^9, 3.793750092713582*^9, 
   3.793750164212603*^9, {3.7937502020460997`*^9, 3.7937502745873404`*^9}, {
   3.7937503192384577`*^9, 3.793750350255669*^9}, {3.793750381797195*^9, 
   3.793750388565516*^9}, 3.793750418701185*^9, 3.793750467159586*^9, {
   3.793750585229415*^9, 3.793750662561574*^9}, {3.793750704808817*^9, 
   3.793750737369899*^9}, 3.7937507693046703`*^9, {3.793750838191162*^9, 
   3.7937508507169447`*^9}, {3.79375148730052*^9, 3.79375150684029*^9}, {
   3.793751546996086*^9, 3.7937515564921722`*^9}, {3.793804746657692*^9, 
   3.793804791877618*^9}, {3.793819908316677*^9, 3.793819928712248*^9}, 
   3.793825343199854*^9, {3.7938254185933733`*^9, 3.793825462984146*^9}, 
   3.793825635207787*^9, {3.793825667366119*^9, 3.793825694935357*^9}, 
   3.7938257287857027`*^9, {3.793825908661831*^9, 3.793825924779875*^9}, 
   3.793825980947835*^9, {3.79382604474268*^9, 3.793826088893381*^9}, 
   3.793826163861059*^9, 3.793826398489895*^9, 3.793826443720039*^9, 
   3.7938264792759933`*^9, 3.793826542585833*^9, {3.7938265921238823`*^9, 
   3.793826640361125*^9}, 3.793826690852261*^9, {3.7938267387694607`*^9, 
   3.7938267649187613`*^9}, 3.7938268062526207`*^9, 3.793922915198159*^9, 
   3.7939229655369873`*^9, {3.793923025219301*^9, 
   3.793923047264369*^9}},ExpressionUUID->"b62e510d-4ccc-4511-8940-\
b76a68dc29d6"],

Cell[BoxData[
 TagBox[
  RowBox[{"FittedModel", "[", 
   TagBox[
    PanelBox[
     TagBox[
      FractionBox[
       RowBox[{"903827.0586772556`", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"\[LeftSkeleton]", "19", "\[RightSkeleton]"}], " ", 
          "t"}]]}], 
       RowBox[{"225955.7646693139`", "\[VeryThinSpace]", "+", 
        RowBox[{"1.`", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"\[LeftSkeleton]", "19", "\[RightSkeleton]"}], " ", 
           "t"}]]}]}]],
      Short[#, 2]& ],
     FrameMargins->5],
    Editable -> False], "]"}],
  InterpretTemplate[
  FittedModel[{
    "Nonlinear", {$CellContext`k -> 903827.0586772556}, {{$CellContext`t}, {
      1. E^(0.1834862385321101 $CellContext`t) (
         1. E^(0.1834862385321101 $CellContext`t) - 
         0.25 (4. - 1. $CellContext`k)^1.)^(-1) $CellContext`k}}}, {
    1}, CompressedData["
1:eJwt0TssQ2EYxvHnnLrWnbrVraV1v99VqwajqQaLQRqJWFwWjB0MHSUsEqPB
QBgkIrEaJAaD0SAY2IxG/1fPSZ78ku985/3e9zvh9FZq05WUJKY9ecQhBd5a
EfGRcu9dI8kn3d6eGVLo1bC9y6SYbBA/2SUl5ISUkktSRm69mvekgryQSvJB
qqwGTVRjAmusLgasLtbiI9bhK9bbGTTbgEE31+MSBu08bLKzGaIZM9iCX9iK
iwzVhtcYwn2GC+MZw7XjM8N14CpDRfCHoaL4yTCd+ETTXXgTyN3JIYf24DhF
ejHOYh+ejkj9th6TBnBlQRq0+ilpCLfT0jBe7EhsVSgjjeL5kTSGa1d8a/d+
J03Y/l9p0upEHU1hJOloGo+zzv8/OXhwFLPv/a5mcX7PVdz6/HaVwLd1n+Yw
++7THynxMQA=
    "], 
    Function[Null, 
     Internal`LocalizedBlock[{$CellContext`k, $CellContext`t}, #], {
     HoldAll}]]& ],
  Editable->False,
  SelectWithContents->True,
  Selectable->True]], "Output",
 CellChangeTimes->{
  3.7937434507371283`*^9, 3.793743493819765*^9, 3.793743606094599*^9, 
   3.793743694419845*^9, 3.793743730073999*^9, 3.793743799780847*^9, 
   3.793743876867021*^9, {3.7937439906441507`*^9, 3.793744007462943*^9}, {
   3.793744068165258*^9, 3.793744133472435*^9}, {3.793749602378817*^9, 
   3.793749640084361*^9}, {3.793749682615738*^9, 3.793749800264748*^9}, {
   3.793749880850068*^9, 3.7937498848803263`*^9}, {3.793749919694532*^9, 
   3.793749946463429*^9}, 3.793750055448612*^9, 3.793750092713582*^9, 
   3.793750164212603*^9, {3.7937502020460997`*^9, 3.7937502745873404`*^9}, {
   3.7937503192384577`*^9, 3.793750350255669*^9}, {3.793750381797195*^9, 
   3.793750388565516*^9}, 3.793750418701185*^9, 3.793750467159586*^9, {
   3.793750585229415*^9, 3.793750662561574*^9}, {3.793750704808817*^9, 
   3.793750737369899*^9}, 3.7937507693046703`*^9, {3.793750838191162*^9, 
   3.7937508507169447`*^9}, {3.79375148730052*^9, 3.79375150684029*^9}, {
   3.793751546996086*^9, 3.7937515564921722`*^9}, {3.793804746657692*^9, 
   3.793804791877618*^9}, {3.793819908316677*^9, 3.793819928712248*^9}, 
   3.793825343199854*^9, {3.7938254185933733`*^9, 3.793825462984146*^9}, 
   3.793825635207787*^9, {3.793825667366119*^9, 3.793825694935357*^9}, 
   3.7938257287857027`*^9, {3.793825908661831*^9, 3.793825924779875*^9}, 
   3.793825980947835*^9, {3.79382604474268*^9, 3.793826088893381*^9}, 
   3.793826163861059*^9, 3.793826398489895*^9, 3.793826443720039*^9, 
   3.7938264792759933`*^9, 3.793826542585833*^9, {3.7938265921238823`*^9, 
   3.793826640361125*^9}, 3.793826690852261*^9, {3.7938267387694607`*^9, 
   3.7938267649187613`*^9}, 3.7938268062526207`*^9, 3.793922915198159*^9, 
   3.7939229655369873`*^9, {3.793923025219301*^9, 
   3.793923047266251*^9}},ExpressionUUID->"a4eee52c-23a4-484a-a676-\
ca6beed8f23c"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwVzns0lAkYBvDJtUnJGcLYZt3XJIWNhLG9L4UxM+b75ks1aRQ21iq6MCRa
1qUtqpHROu1uLm2Hk0TT7WzRWjWdSDSbaLRtGrJhlApZl2ntH895zu+P55zH
PiZZtEuPRqMJ5vN/e7Y6GNJoXGAf8w+6WKmBY8VWeasWcGE2N2rfxRoNaMSL
9SP1uGBU9Brq6zUgH56gXTfggnXgF/cbmzQwadI6m0jngsvBxSUf1RpoDE8e
72FwQX3yxb9aRj+Edt3qr3fmwrb0UJu/C/ph54tNLTt4XMhu10nM0wbA1s/5
uOUvXHgeykoOqxmE6Q5vq9ghLjgxjj6VDr+GO5PnMzy8wmCtp8VWb/EIfBZ7
dWRTfhg09i+yq8U3IKPrL1+qCoMTZjE0dfkYyMffiu0ceSB7oKfpTHgPBfs5
+xQHeBA8R6uPiBwHuWtrSO9tHkgbvio+v20SvnQZXyk244PhqozTY01ToJXs
6NyznQ8Zqey+hDUzIHdx5etX80Hu0H7YQz0H7d4l3W8/8oH3TJV2JYeGdoc5
dvuDBHD6UUu62EEPDUzy0nilAqhNV13KsTDAJ64ra86/EsCpgbtL8z2N8E4e
o6zUIxy4uX4nN0gWIjiWlf6VEw6q2pSu6olF2DsjEf32MBx2NW8szKxcgvrM
luWjtkJYF9+wT55ghjat+c2Ve4Xwbm3AHypnBgquHHXU3hJCksq3I/uNORq/
W9Z2z4iATo9De7PNLDHN2ThG40bA5T9byMFAa4xyrIn7SkTAZoWxtKTCBouC
rN8rMwgwjUxtO5vCwtZstqSsgoD8IPe55tV2KOgzFp5uJYAz3hPD0NpjKP3H
uq53BLB4OvWDTkckhfdGJFYkJFa/vd/d7IxVN+42MIAEFXFgcKk5GxcExEYw
4kgwottWqaWu2FN4OU5USIJX2PMl2fRVODHboWu6QsLQeo1LoqkH2hcWSVPU
JGyfVKz1P+eJpf7M1M16IjBpO5vmd2QNWtGDqVy2CKzqvjv3z0FvNKtwODsm
EEFRVd1NsxIfJMUdyUelIkioZp5Zt8wPK9xt7Pf8LILkdtOvl1zgoA/bW5yp
FMHLXW2F3s3rcePwp7kHoyKo70vN3XIcMbr12+/jzCngHPgmpCA4CJVtvx53
41Bw4Wa9w0zERvQZOpweEENBAdPR1j01BO1UCx+dOEKB5bA2lnWbi8Sz6Esm
DRSIX0RNbz3Ix5N6kbsfP6EgZYrzUh4qxPdE+eeZ3RT04oZzjRFC3Fze/8ip
h4KLxtmjQzFCXM7Z7S19SgHXbcAxIkuIF1KzdNbPKDC5/rs4SSFE5etyWVQf
BTIT/dluUwJnOgauDg1TkF4gE/lmEhjFWhF/aoSCyuDoBexcAlsS9zD9tfN7
2aEzzGME/rBwMqtolIKh4hSZYRmBloHGIe5jFCQYautoVwn0vLZCnTJBgYQf
eDdPS6BcP6mQNUkBf/VQbdUHAqdIRcC9ea9ffa34zjSBt9/4VVlNUTCnVG43
pZPIZ/MTb05TYHDDxeK+M4kNUhkrdoYCF1+Rmc6NRHNlV6fJLAWBTi0WPl4k
9kZLvCRz83+yivwVgSQGNFQOGuooGIlP3TnOJbFC96rs0ryTFM2nfEkSDQSu
vC2fKGj6cP1xzlYS439Kmvs0bya/0unhDhL/A17zIcM=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$22985#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwV0H880wkcx/FlCq0f4lEINVvy+6IH15Xp8fnoTtZ+2PYt3TDFyu6RpCL1
qHj0w7rzo5Jtl+7Kj9qSU36lolx1drqWWrmE8IibOIyMNOXnuT/ej9fj+e/b
KTpesNuERCJxZvd/fTS0uSQSE555m7dfS9JB+gWbVK85TJgwfLlZnawDnXAB
OdyECY//urDm71QdyPs/ke6aMiFFUM2hyHRgpGgmYy2YcAzp83NLdVDDjR9t
tmLCEkNcTFCfDoIbH3SVOjPBULerpSiyC3Z2bK3dwWLCrUWX/Iz897Byg/PZ
ZVeYsOe54Z02vQfGtX424j4mWMgKV7He9ILaqDrq7bsFgpbeS+dx9GAvrtRv
lW6BhuR2T2v8AFkWZIfFDVsgeOJUvEhlAPnokJBKZwG7Id6JljQCZw4yDlQk
sODbbK7b7X2jIHfXbG59yAJvvXTn3UQjrHUZ9RBassH9XFiwfcdnGBDteBkX
wYb95ruaisImQO7iziYXsiEvPqFt99xpeO4naxoaY4O66MGyC5dISE1hUA9u
4sAlarc4fYMJmlJSD7MUHOg03SYxupviG3ePG6puDrz2NJfwNs1DdapVjsKb
C7Rc/x5HiTkCPUfRfpIL/wru1iqH52PrhEhQ/YIL6ScW02zTFyLZrtZhcGUI
0Gjj/VquJS7XSB8X7A+BhYw7zZuNS5BzO40+8CAEaqYYQfVKazQbXvrsyTwe
fDjr0jW/YCkedjaL1nnyoNRWOvqVygYj6TdiNgp4kMCBsfKndpi5yXak7igP
ZuoVboMsB9SccBXl5PPgvKWJbKZxBXI6zUJ+1vDgj9641YweKgZbXLzVOMyD
ncMJ3uVHaMgPeaIX2fBhvaLgZT5lFV6992eZFfDhIc9nd3GHM84JEG+ziuHD
ye9JNdIKF2zOKI8RZPBh7Er2NXWOG36a1E7/fpsPyhQrctVTD3TKyExKfMsH
j+Lq8LRhL1T42x0KNRHAGbn2kdbXG20sgojTrgJQNRRentzjg5b5tFwDRwBj
4XT+/RtrkS/UxqclCaCoct3H7sW+mL9muVPcZQGsDlXmNsX64TpXP+HxOgG0
DkZUnh7+Gr/rn5mqHxRAC6cgPPrYNxil2XMqxpqA6wso+8Uf12PdM+VZTwYB
XorxYlW2P67rSzkSEE2AT7fkRZ59AFIbzF+d+5GA0BZZ4qL8jchriyqhlBHw
eHlUZAod8LxJ+N7Xbwg4HtqRndELOMLLW3G8iYCDmUfEX/SAoXldr1Y1EyCv
vmkvGQJ0YOz1S2oh4IshHwONgL8dSp62bSOgQtkcNkZGrOvNy4rsJKAzQX4s
YiXihPZ9ZV8/ATovJ7QMRYx0dJNk6wm4nyb54agQsTY2zs5/gACaxDfufQTi
T+bG5MxBAuqdaIuqxIjLAs02rzEQEPVCphQdQPS54/Y28RMBxGmvdwWZiHLy
vgxHIwHX/pFWWWQhfuZXBDyZ9WX13tgDMsSHHzZctflMQNpUkRB+QWS7smPv
jxPAHYGQ9kLEsqQsR/EEASnlsd2BxYjWdY0vKZMENHBK+EUliK1RIl/R1Ox/
eig+dAcxoKygZ+40AdTxjxfbqhDzp7tzSmadPUcqxBpEU447a/sMAQOlqqHr
jxAlv+6bmpn1drVZ2AI14n+jWS/v
          "]]}, 
        Annotation[#, "Charting`Private`Tag$22985#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwV0HdQkwccxvFAUESiICAQIWGT90UUB9QB6O/ngpiEjJfaggYxnLFVELSK
VMAq4mApKtT0UNbpabViENQriLVqvEYrBNnDQgMo20ABKSOU/vHc9z7/Pk6y
aMleQxqNJpjd/12pdp5Do3FBebF36PoiLaReskleZsCFS7byMnumFrQhDPpO
Qy6UbnySkOuohazeUdojIy7ciMd/7nhpYcxUPXXAhAtd139TfRRo4UlQ9EiD
BRf0z2jDQ6laCKwt77jvxgWFcbGhyLgDwtuCn+/mcaElcaQmxqQTHNa7ZVhf
54LBWrb4vPwDTFT62ET0cKE7zQ7pjd3wYuzm8RXe20Gp+hxnHt8HdhGlfcFn
tsOFKz9bXyschEwTur1Z9XbQllxrjtTpIGvkU4ijCw+K2XnBiW3DcPaw36EH
3/GgTSer0oyNQJaHOqD5KQ+ETbVue5mfYRVnZGmIOR9yOt82WRT8C/3S3VVR
u/jwzZYkkzjvKcjiePDpt/iwroSTNKHTw58+V+o/feZDdJciaK2VATqe8HM8
vFkAww7tleISQzQyTT7GyxZApfLWPYbCCOs8lt6+2SWAXC451np1Lr5ItlBk
rwgCz9XsW7nZ8xBcFNmtp4KAbnCys+bv+dg8KZX8+jYIGmnd06c4C5DOfG4/
4CCEjSajlwKemeES9ZlnBTFC+GXbu0jGmkUoKElx6S8XQsVgRE5psgUaDy1+
/WquCDLHiXD6lCUeczOWaT1FoC5ddSZj72IMc7kt3yARQa3nt49KNNaYvtl2
WHVcBMOM+vYtMltUnySkinwRPDTzfjH+nomCdmPhj2oRLC7M0VAJdhhocvVe
7ZAIhmJ3CQSWLBQLX/VJbcTAiBCvvpvOxsLHL5UWIAamT1H5MXNHNPCP+NJC
Lobw7qjbD9WO2JBWLJekieEHlm+oXbwTjk5V6itKxGAhnVYN+DijU1p67JEm
MTQ0uhLsv5wx25d5dIehBIpX7uLNyXBBG5Nt1GlCAl4V8/drCFc0z3fO1Qkk
YHVDf9muzBXFIZXRKbESaKExmVZCN8z3WuIUdU0CzRUvXVqr3XAN4ROSoJKA
Ptfnj9Qd7ri1d2b6zYAEAr+OGS2rcsc96v1JcksK6mNEX9Ss5aDq9Y0MTz8K
ZuZ6zoQUcnBNz4k4fxkFVW05mzZMc9Cxep7mwjkKwhdmeyUJCRS17CkyVVKw
+8Fmg4QCAi8a7oysqaPAcrW1/OxHAodFeeyEegrG+O8vF3cTuCOvQ+PaQEEX
15rX2kOgvV+kT2wjBbynsrAV/QTeOZqot22hYPkVY6saHYGq7rzMsHYKrJ9k
NRpOEDhZ2Vna00vBIUi5z2CQGMYi913uo8CUOZpKLiDx+YEopm8/BbFmk6Nb
F5J4ft5YYvoABY+/D41PNCfRepNxgJeOgiZf04CPViSufEg2HRml4E0KNXOT
RWIW/WAaa4yCD3aTHeVsEsfFD/xfzToUxaHVDiQ+HVxfaDNOAT/4wtSEE4l8
gn+gbIICVt3gEq47icrYTFbEJAXvoChzJ4dES1VtlekUBccD3X+KIkhs3iP1
lk7P/u2gkmV6kOivLPgwR0/Bsn3LXQuWkpiv71IUzfruurq4Yk8SjQQevK9m
KDinaQ7/fRmJ+3IOTs/Mui4ivFWznMT/ABqAIPs=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$22985#3"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {50.0000006122449, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {50.0000006122449, 0}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {All, All}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{Automatic, Automatic}, {
       Automatic, Automatic}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"Exponential Fit\"", "\"Naive Logistic Fit\"", 
       "\"Ad hoc Fancy Logistic\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.7937434507371283`*^9, 3.793743493819765*^9, 3.793743606094599*^9, 
   3.793743694419845*^9, 3.793743730073999*^9, 3.793743799780847*^9, 
   3.793743876867021*^9, {3.7937439906441507`*^9, 3.793744007462943*^9}, {
   3.793744068165258*^9, 3.793744133472435*^9}, {3.793749602378817*^9, 
   3.793749640084361*^9}, {3.793749682615738*^9, 3.793749800264748*^9}, {
   3.793749880850068*^9, 3.7937498848803263`*^9}, {3.793749919694532*^9, 
   3.793749946463429*^9}, 3.793750055448612*^9, 3.793750092713582*^9, 
   3.793750164212603*^9, {3.7937502020460997`*^9, 3.7937502745873404`*^9}, {
   3.7937503192384577`*^9, 3.793750350255669*^9}, {3.793750381797195*^9, 
   3.793750388565516*^9}, 3.793750418701185*^9, 3.793750467159586*^9, {
   3.793750585229415*^9, 3.793750662561574*^9}, {3.793750704808817*^9, 
   3.793750737369899*^9}, 3.7937507693046703`*^9, {3.793750838191162*^9, 
   3.7937508507169447`*^9}, {3.79375148730052*^9, 3.79375150684029*^9}, {
   3.793751546996086*^9, 3.7937515564921722`*^9}, {3.793804746657692*^9, 
   3.793804791877618*^9}, {3.793819908316677*^9, 3.793819928712248*^9}, 
   3.793825343199854*^9, {3.7938254185933733`*^9, 3.793825462984146*^9}, 
   3.793825635207787*^9, {3.793825667366119*^9, 3.793825694935357*^9}, 
   3.7938257287857027`*^9, {3.793825908661831*^9, 3.793825924779875*^9}, 
   3.793825980947835*^9, {3.79382604474268*^9, 3.793826088893381*^9}, 
   3.793826163861059*^9, 3.793826398489895*^9, 3.793826443720039*^9, 
   3.7938264792759933`*^9, 3.793826542585833*^9, {3.7938265921238823`*^9, 
   3.793826640361125*^9}, 3.793826690852261*^9, {3.7938267387694607`*^9, 
   3.7938267649187613`*^9}, 3.7938268062526207`*^9, 3.793922915198159*^9, 
   3.7939229655369873`*^9, {3.793923025219301*^9, 
   3.7939230474487047`*^9}},ExpressionUUID->"12fab8ae-5ae8-434b-b68d-\
ebca81bb5fe4"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.011000000000000001`], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        PointBox[CompressedData["
1:eJxVk00oBFEcwF8oSuGwRZKWkCSt72/z1vfXUmprU2qjRShbWidqUopSllLa
lE05uDnsaU9zcNgDohwcHDYlF0Xr4uCA/f8cZmr69ev33ps307yy2dWpQIZS
yvi9/2i/CrTwwxAW4Qo6YQ6s1fZ57dAB+7VtHXMcL8En7etaXrxcqKfxCsbP
4FVC5xxeLYwG8Bphct6+T3MBr8OXcJfQv4LXC8NBvEF4t4Y3CoMhvInx63gz
voG38H6beKvQZ+JtrP/vfMfjLbxDuLiNd7LfHbwL7sFuod7He4SuA9xgP4e4
FiaPhCYejtDdrHdKx60zei/zz+l44oLeJ7y+pOOxGJ3/JByn4xGLPiAsvaLj
twn6oLD4ho4X3tOHeN4DHT95pA8Ll5/oeFaSPiIMPdPFzbcX+qiw8pWO573T
x9K0vCm6uE590uVc6N0vOu77pnvEvcotXVzFM8XVRNqjnmy6uDJy6XLOtCPf
/QOuznfC
         "]]}, {}}}, {}, {}, {{}, {}}, {{}, {}}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     AxesOrigin -> {0, 0}, PlotRange -> {{0, 64}, {0, 400000}}, 
     PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {{0, 64}, {0, 400000}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"# of Cases\""}, "PointLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.396], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.396], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                 ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                   None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0.368417, 0.506779, 0.709798], Editable -> False, 
                  Selectable -> False], ",", 
                 RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
             "}"}], ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", "False", "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.7937434507371283`*^9, 3.793743493819765*^9, 3.793743606094599*^9, 
   3.793743694419845*^9, 3.793743730073999*^9, 3.793743799780847*^9, 
   3.793743876867021*^9, {3.7937439906441507`*^9, 3.793744007462943*^9}, {
   3.793744068165258*^9, 3.793744133472435*^9}, {3.793749602378817*^9, 
   3.793749640084361*^9}, {3.793749682615738*^9, 3.793749800264748*^9}, {
   3.793749880850068*^9, 3.7937498848803263`*^9}, {3.793749919694532*^9, 
   3.793749946463429*^9}, 3.793750055448612*^9, 3.793750092713582*^9, 
   3.793750164212603*^9, {3.7937502020460997`*^9, 3.7937502745873404`*^9}, {
   3.7937503192384577`*^9, 3.793750350255669*^9}, {3.793750381797195*^9, 
   3.793750388565516*^9}, 3.793750418701185*^9, 3.793750467159586*^9, {
   3.793750585229415*^9, 3.793750662561574*^9}, {3.793750704808817*^9, 
   3.793750737369899*^9}, 3.7937507693046703`*^9, {3.793750838191162*^9, 
   3.7937508507169447`*^9}, {3.79375148730052*^9, 3.79375150684029*^9}, {
   3.793751546996086*^9, 3.7937515564921722`*^9}, {3.793804746657692*^9, 
   3.793804791877618*^9}, {3.793819908316677*^9, 3.793819928712248*^9}, 
   3.793825343199854*^9, {3.7938254185933733`*^9, 3.793825462984146*^9}, 
   3.793825635207787*^9, {3.793825667366119*^9, 3.793825694935357*^9}, 
   3.7938257287857027`*^9, {3.793825908661831*^9, 3.793825924779875*^9}, 
   3.793825980947835*^9, {3.79382604474268*^9, 3.793826088893381*^9}, 
   3.793826163861059*^9, 3.793826398489895*^9, 3.793826443720039*^9, 
   3.7938264792759933`*^9, 3.793826542585833*^9, {3.7938265921238823`*^9, 
   3.793826640361125*^9}, 3.793826690852261*^9, {3.7938267387694607`*^9, 
   3.7938267649187613`*^9}, 3.7938268062526207`*^9, 3.793922915198159*^9, 
   3.7939229655369873`*^9, {3.793923025219301*^9, 
   3.793923047604224*^9}},ExpressionUUID->"14984d11-cf9d-45d6-bcae-\
be5e0072a425"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {{{}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.011000000000000001`], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         PointBox[CompressedData["
1:eJxVk00oBFEcwF8oSuGwRZKWkCSt72/z1vfXUmprU2qjRShbWidqUopSllLa
lE05uDnsaU9zcNgDohwcHDYlF0Xr4uCA/f8cZmr69ev33ps307yy2dWpQIZS
yvi9/2i/CrTwwxAW4Qo6YQ6s1fZ57dAB+7VtHXMcL8En7etaXrxcqKfxCsbP
4FVC5xxeLYwG8Bphct6+T3MBr8OXcJfQv4LXC8NBvEF4t4Y3CoMhvInx63gz
voG38H6beKvQZ+JtrP/vfMfjLbxDuLiNd7LfHbwL7sFuod7He4SuA9xgP4e4
FiaPhCYejtDdrHdKx60zei/zz+l44oLeJ7y+pOOxGJ3/JByn4xGLPiAsvaLj
twn6oLD4ho4X3tOHeN4DHT95pA8Ll5/oeFaSPiIMPdPFzbcX+qiw8pWO573T
x9K0vCm6uE590uVc6N0vOu77pnvEvcotXVzFM8XVRNqjnmy6uDJy6XLOtCPf
/QOuznfC
          "]]}, {}}}, {}, {}, {{}, {}}, {{}, {}}}, {{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
xYZw1f30j+VNuLL4r8iH0mz4dE5hv2z/M5yWI92qJ8uGjrI/fYR0M27WZnNE
ayMbSJZnRJ8Uv8DznC/HFiixoTPxrXXehlZcaO56u5oyG2QeFqu+im/Dn6v2
H1NUZ0Okn1ZKz8BrXKPyX2LKNj5+OY+r+2racZ6Fctd6Tf78tXtKKrM7cPPL
LifFddig5v04xjuhE78rzkrh7WLDo/Vuh3rT3+KSuTd7hPawwQYh5/Y+7MI7
2sbt/u1nQxp1yNZ5/Xtcz0UsPcSQX68vGD93ugdPnNP+OGPEBtN31zN+l3zA
rdUunv1hyoY/O968V03sxx9WxmdfILFBJPjIn+eSA/iGI2VDYygb7rL7ipMH
B/CeyzPnBs3ZcL+F5MDN+YQfkJC7aW/JhpPV7P7nSUN4aq7B2HsrNpQe1uw9
njiMn3kV5tFhwwY5wuX1+4oRvM4lo8jiFBuKrhQYaA6M4irzdRMtdvz+g/OD
wTJf8GG1Fd71Z9lwdf9hk+2lX/HDVVuKD7nw/Xx3f1hb4RuefwT5We3Khoqo
lvSgpEncPZh3qcyTz6+89rXVpx94s8TtMh0vNril3xqrf/QT357X+vu2D1+P
Xidp29wp/NsryaA8fz4+z/hdBknTuMW5XZXKQWw4kCavWZv5Gy+ePzafFsyG
uVvUVe8q/+C+W66GJkewYcnuYEC87Bz+pqrikRSNDd8X6s6X2M/juy17lqIZ
fH5iZ6YcyhbwP8GKVDaXDSV+V31bk5dwG8lDT5dHsUHnu4jkTikBoiLPcTkl
mg2r7F7Pig8JECGvc5hBCWyIv819sy1vGZH7rtt8LIkN4qK/4zPilxNt/Wtk
Tl5jw5XmvPyRyBWEyrfA/L1pbLh1fEERyRUiyNO3vW5msKH3zFbj3IZVhP/C
oL5sNhu2Ckou2P4SJp6LkJ/9yWcDj/pSuTR8NTElSY1xLWSDyjHD0o+9YoTC
hnKbriI2JIlOrA0iixNe6pvHHhSzoSpRxvFhiSRxTftE8ZZSNhyLv214grWW
eLKbF5T0gA2XbOLmWOekCGnTaWH/KjbkjSXlPTssTRjhGu3DNfzvHdf5zSLr
CbejDinHH7Ph+JG4WEEbGaLqzHON3Q1scL40sEcvfQMx7Pr3Z04TG5S0kLrq
d3LEGq9dVeua+Xh9LX36NisQjqGp+K9WNtiPxDVKflYkePR2KefXfD/LJAZa
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
oA==
           "]]}, Annotation[#, "Charting`Private`Tag$23365#1"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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

           "]]}, Annotation[#, "Charting`Private`Tag$23365#2"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
PxqCnmM=
           "]]}, 
         Annotation[#, "Charting`Private`Tag$23365#3"]& ]}}, {}, {}}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     AxesOrigin -> {0, 0}, PlotRange -> {{0, 64}, {0, 400000}}, 
     PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {{0, 64}, {0, 400000}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"# of Cases\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.396], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.396], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), 
          InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{
          "\"Exponential Fit\"", "\"Naive Logistic Fit\"", 
           "\"Ad hoc Fancy Logistic\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.7937434507371283`*^9, 3.793743493819765*^9, 3.793743606094599*^9, 
   3.793743694419845*^9, 3.793743730073999*^9, 3.793743799780847*^9, 
   3.793743876867021*^9, {3.7937439906441507`*^9, 3.793744007462943*^9}, {
   3.793744068165258*^9, 3.793744133472435*^9}, {3.793749602378817*^9, 
   3.793749640084361*^9}, {3.793749682615738*^9, 3.793749800264748*^9}, {
   3.793749880850068*^9, 3.7937498848803263`*^9}, {3.793749919694532*^9, 
   3.793749946463429*^9}, 3.793750055448612*^9, 3.793750092713582*^9, 
   3.793750164212603*^9, {3.7937502020460997`*^9, 3.7937502745873404`*^9}, {
   3.7937503192384577`*^9, 3.793750350255669*^9}, {3.793750381797195*^9, 
   3.793750388565516*^9}, 3.793750418701185*^9, 3.793750467159586*^9, {
   3.793750585229415*^9, 3.793750662561574*^9}, {3.793750704808817*^9, 
   3.793750737369899*^9}, 3.7937507693046703`*^9, {3.793750838191162*^9, 
   3.7937508507169447`*^9}, {3.79375148730052*^9, 3.79375150684029*^9}, {
   3.793751546996086*^9, 3.7937515564921722`*^9}, {3.793804746657692*^9, 
   3.793804791877618*^9}, {3.793819908316677*^9, 3.793819928712248*^9}, 
   3.793825343199854*^9, {3.7938254185933733`*^9, 3.793825462984146*^9}, 
   3.793825635207787*^9, {3.793825667366119*^9, 3.793825694935357*^9}, 
   3.7938257287857027`*^9, {3.793825908661831*^9, 3.793825924779875*^9}, 
   3.793825980947835*^9, {3.79382604474268*^9, 3.793826088893381*^9}, 
   3.793826163861059*^9, 3.793826398489895*^9, 3.793826443720039*^9, 
   3.7938264792759933`*^9, 3.793826542585833*^9, {3.7938265921238823`*^9, 
   3.793826640361125*^9}, 3.793826690852261*^9, {3.7938267387694607`*^9, 
   3.7938267649187613`*^9}, 3.7938268062526207`*^9, 3.793922915198159*^9, 
   3.7939229655369873`*^9, {3.793923025219301*^9, 
   3.7939230495869007`*^9}},ExpressionUUID->"faada652-f928-4b3b-a999-\
555e0a2ee5b7"]
}, Open  ]]
},
WindowSize->{1193, 911},
WindowMargins->{{0, Automatic}, {33, Automatic}},
Magnification:>1.25 Inherited,
FrontEndVersion->"11.1 for Linux x86 (64-bit) (April 18, 2017)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 4764, 138, 266, "Input", "ExpressionUUID" -> \
"7527be31-d223-4df1-b004-c881e44a1832"],
Cell[CellGroupData[{
Cell[5347, 162, 5529, 133, 378, "Input", "ExpressionUUID" -> \
"7378be21-9405-4e98-a317-0337fe4a4ec5"],
Cell[10879, 297, 2105, 32, 72, "Message", "ExpressionUUID" -> \
"fb37adda-68de-468f-b858-701403e94734"],
Cell[12987, 331, 1986, 30, 41, "Output", "ExpressionUUID" -> \
"200d9f6e-edab-438b-b19e-424dbfba9360"],
Cell[14976, 363, 2119, 33, 69, "Output", "ExpressionUUID" -> \
"013336e9-32c2-4cba-b5c1-7738a6f18c73"],
Cell[17098, 398, 1967, 31, 50, "Message", "ExpressionUUID" -> \
"df5a1542-766b-46b5-b109-d94f3ba97c95"],
Cell[19068, 431, 2443, 45, 71, "Output", "ExpressionUUID" -> \
"b62e510d-4ccc-4511-8940-b76a68dc29d6"],
Cell[21514, 478, 3419, 69, 82, "Output", "ExpressionUUID" -> \
"a4eee52c-23a4-484a-a676-ca6beed8f23c"],
Cell[24936, 549, 21983, 427, 315, "Output", "ExpressionUUID" -> \
"12fab8ae-5ae8-434b-b68d-ebca81bb5fe4"],
Cell[46922, 978, 9909, 196, 291, "Output", "ExpressionUUID" -> \
"14984d11-cf9d-45d6-bcae-be5e0072a425"],
Cell[56834, 1176, 93280, 1616, 291, "Output", "ExpressionUUID" -> \
"faada652-f928-4b3b-a999-555e0a2ee5b7"]
}, Open  ]]
}
]
*)

